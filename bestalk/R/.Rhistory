t2_col_plants_unbal <- llply(trees_colless_plants_unbal, fastBM, a = 10, bounds=c(0,100))
abd_col_plants_bal <- round(rlnorm(length(trees_colless_plants_bal), meanlog=5, 1), 0)
abd_col_plants_unbal <- round(rlnorm(length(trees_colless_plants_unbal), meanlog=5, 1), 0)
# Animals
t1_col_anim_bal <- llply(trees_colless_anim_bal, fastBM, a = 10, bounds=c(0,100))
t1_col_anim_unbal <- llply(trees_colless_anim_unbal, fastBM, a = 10, bounds=c(0,100))
t2_col_anim_bal <- llply(trees_colless_anim_bal, fastBM, a = 10, bounds=c(0,100))
t2_col_anim_unbal <- llply(trees_colless_anim_unbal, fastBM, a = 10, bounds=c(0,100))
abd_col_anim_bal <- round(rlnorm(length(trees_colless_anim_bal), meanlog=5, 1), 0)
abd_col_anim_unbal <- round(rlnorm(length(trees_colless_anim_unbal), meanlog=5, 1), 0)
t1_col_anim_bal[[1]]
t1_col_plants_bal[[1]]
outer(t1_col_plants_bal[[1]], t1_col_anim_bal[[1]],
function(x,y) as.numeric(exp(x-y) > 1.5))
outer(t1_col_plants_bal[[1]], t1_col_anim_bal[[1]],
function(x,y) as.numeric(exp(x-y) > 1.5))
outer(t1_col_plants_bal[[1]], t1_col_anim_bal[[1]],
function(x,y) as.numeric(exp(x-y) > 1.5))
outer(t1_col_plants_bal[[1]], t1_col_anim_bal[[1]],
function(x,y) as.numeric(x-y > 1.5))
outer(t1_col_plants_bal[[1]], t1_col_anim_bal[[1]],
function(x,y) as.numeric(x-y > 1.5))
library(inline); library(RcppArmadillo)
install.packages("inline")
install.packages("RcppArmadillo")
library(inline); library(RcppArmadillo)
f = cxxfunction(body='return wrap(arma::randu(5,10));', plugin='RcppArmadillo')
install.packages("Rcpp")
library(inline); library(RcppArmadillo)
library(Rcpp)
f = cxxfunction(body='return wrap(arma::randu(5,10));', plugin='RcppArmadillo')
getPlugin( "Rcpp" )
getPlugin( "RcppArmadillo" )
smaller_unbal
length(tree_pairs_unbal[[1]])
t1_col_plants_bal[1:length(tree_pairs_unbal[[1]])]
length(tree_pairs_unbal[[1]])
all_t1_bal <- list(t1_col_plants_bal[1:length(tree_pairs_unbal[[1]])],
t1_col_anim_ballength(tree_pairs_unbal[[1]]))
all_t1_bal <- list(t1_col_plants_bal[1:length(tree_pairs_unbal[[1]])],
t1_col_anim_bal[length(tree_pairs_unbal[[1]])])
length()
length(all_t1_bal)
length(all_t1_bal[[1]])
length(all_t1_bal[[2]])
length(tree_pairs_bal[[1]])
t1_col_anim_bal[length(tree_pairs_bal[[1]])]
all_t1_bal <- list(t1_col_plants_bal[1:length(tree_pairs_bal[[1]])],
t1_col_anim_bal[1:length(tree_pairs_bal[[1]])])
length(all_t1_bal[[2]])
length(all_t1_bal[[1]])
all_t1_unbal <- list(t1_col_plants_unbal[1:length(tree_pairs_unbal[[1]])],
t1_col_anim_unbal[1:length(tree_pairs_unbal[[1]])])
length(all_t1_unbal[[2]])
length(all_t1_unbal[[1]])
t1_col_anim_bal[[1]]
names(t1_col_anim_bal[[1]])
listoftraitvecs <- all_t1_bal
length(listoftraitvecs[[1]])
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x-y > 1.5))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x-y > 1.5))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
length(mats)
mats[[1]]
mats[[2]]
mats[[3]]
sim_traits_nets <- function(listoftraitvecs) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x-y > 1.5))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal)
getnetmets <- function(balanced, unbalanced) {
netmets_bal <- ldply(balanced, function(x) networklevel(x,
index = c("connectance", "links per species", "nestedness")))
netmets_unbal <- ldply(unbalanced, function(x) networklevel(x,
index = c("connectance", "links per species", "nestedness")))
data.frame(
type = c( rep("bal", length(balanced)), rep("unbal", length(unbalanced))),
rbind(netmets_bal, netmets_unbal) )
}
df_rand <- getnetmets(mats_rand_bal, mats_rand_unbal)
sim_rand_nets <- function(listoftrees) {
mats <- list()
for(i in 1:length(listoftrees[[1]])) {
m <- Ntip(listoftrees[[1]][[i]]) # number of plant species
n <- Ntip(listoftrees[[2]][[i]]) # number of animal species
# make random matrix and put matrix into list
mm <- matrix(rbinom(m * n, 1, .5), ncol = m, nrow = n)
dimnames(mm)[[1]] <- as.list(listoftrees[[1]][[i]]$tip.label)
dimnames(mm)[[2]] <- as.list(listoftrees[[2]][[i]]$tip.label)
mats[[i]] <- mm
}
mats
}
mats_rand_bal <- sim_rand_nets(tree_pairs_bal)
mats_rand_unbal <- sim_rand_nets(tree_pairs_unbal)
df_rand <- getnetmets(mats_rand_bal, mats_rand_unbal)
df_rand_melt <- melt(df_rand)
head(df_rand_melt)
ggplot(df_rand_melt, aes(type, value, fill=variable)) +
theme_bw(base_size=18) +
geom_boxplot() +
facet_wrap(~ variable, scales="free") +
opts(legend.position = 'none')
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
mats_traits_bal[[1]]
mats_rand_bal[[1]]
networklevel(mats_rand_bal[[1]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[1]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[100]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[200]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[20]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[22]], index = c("connectance", "links per species", "nestedness"))
tree<-rtree(50)
x<-fastBM(tree) # simulate using fastBM
x
anc.ML(tree,x) # fit model & estimate ancestral states
library(OUwie)
data(tworegime)
select.reg<-character(length(tree$node.label))
select.reg[tree$node.label == 1] <- "black"
select.reg[tree$node.label == 2] <- "red"
plot(tree)
nodelabels(pch=21, bg=select.reg)
trait[1:5,]
OUwie(tree,trait,model=c("OUMV"),root.station=TRUE)
getnetmets <- function(balanced, unbalanced) {
netmets_bal <- ldply(balanced, function(x) networklevel(x,
index = c("connectance", "links per species", "nestedness")))
netmets_unbal <- ldply(unbalanced, function(x) networklevel(x,
index = c("connectance", "links per species", "nestedness")))
data.frame(
type = c( rep("bal", length(balanced)), rep("unbal", length(unbalanced))),
rbind(netmets_bal, netmets_unbal) )
}
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
networklevel(mats_traits_bal[[22]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[20]], index = c("connectance", "links per species", "nestedness"))
networklevel(mats_traits_bal[[21]], index = c("connectance", "links per species", "nestedness"))
mats_traits_bal[[21]]
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x-y > ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.3)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.3)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.1)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.1)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
sum(mats_traits_bal[[1]])
sum(mats_traits_bal[[2]])
sapply(mats_traits_bal, sum)
tree_predator <- rcoal(10)
tree_prey <- rcoal(10)
trait_predator <- fastBM(tree_predator, a = 10, bounds=c(0,100))
trait_prey <- fastBM(tree_prey, a = 10, bounds=c(0,100))
trait_predator
trait_prey
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x-y) > 1.5))
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x/y > ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1)
sapply(mats_traits_bal, sum)
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(x/y > abs(ratio)))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1)
sapply(mats_traits_bal, sum)
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.3)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.3)
sapply(mats_traits_bal, sum)
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x/y) > 1.5))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x/y) > 1.5))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x/y) > 1.5))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x/y) > 1))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x/y) > 1))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x-y) > 1))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x-y) > 1))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x-y) > 1))
outer(trait_predator, trait_prey,
function(x,y) as.numeric(exp(x-y) > 1))
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) > ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.3)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.3)
sapply(mats_traits_bal, sum)
mats_traits_bal[sapply(mats_traits_bal, sum) == 0]
mats_traits_bal[!sapply(mats_traits_bal, sum) == 0]
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) > ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats[!sapply(mats, sum) == 0]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.3)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.3)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats[!sapply(mats, sum) == 0]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.3)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.3)
sapply(mats_traits_bal, sum)
sapply(mats_traits_unbal, sum)
df_rand <- getnetmets(mats_rand_bal, mats_rand_unbal)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
length(df_traits)
df_traits
mats_traits_bal[[15]]
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mats[[i]] <- mm
}
mats[!sapply(mats, sum) == 0]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
ratio <- 1.5
listoftraitvecs <- all_t1_unbal
mats <- list()
mm <- outer(listoftraitvecs[[1]][[1]], listoftraitvecs[[2]][[1]],
function(x,y) as.numeric(exp(x-y) < ratio))
mm
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
mm
if(
sum(mm) == 0 | sum(mm) == length(listoftraitvecs[[1]][[i]])*length(listoftraitvecs[[2]][[i]]))
{mm <- NULL} else
{mm <- mm}
mm
matrix(1, 20, 20)
mm <- matrix(1, 20, 20)
if(
sum(mm) == 0 | sum(mm) == length(listoftraitvecs[[1]][[i]])*length(listoftraitvecs[[2]][[i]]))
{mm <- NULL} else
{mm <- mm}
mm
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
if(
sum(mm) == 0 | sum(mm) == length(listoftraitvecs[[1]][[i]])*length(listoftraitvecs[[2]][[i]]))
{mm <- NULL} else
{mm <- mm}
mats[[i]] <- mm
}
mats[!is.null(mats)]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
sapply(mats_traits_bal, sum)
sapply(mats_traits_unbal, sum)
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
# 		if(sum(mm) == 0) { mm <- NULL } else
# 			if( sum(mm) == length(listoftraitvecs[[1]][[i]])*length(listoftraitvecs[[2]][[i]]) ) {mm <- NULL } else
# 					{ mm <- mm }
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
length(sapply(mats_traits_unbal, sum))
length(sapply(mats_traits_bal, sum))
mm
mm <- matrix(1, 20, 20)
mm
if(sum(mm) == 0) { mm <- NULL } else
if( sum(mm) == length(listoftraitvecs[[1]][[i]])*length(listoftraitvecs[[2]][[i]]) ) {mm <- NULL } else
{ mm <- mm }
mm
i
dims(mm)
dim(mm)
str(mm)
mm <- matrix(1, 20, 20)
str(mm)
ncol(mm)
nrow(mm) * ncol(mm)
if(sum(mm) == 0) { mm <- NULL } else
if( sum(mm) == nrow(mm) * ncol(mm) ) {mm <- NULL } else
{ mm <- mm }
mm
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
if(sum(mm) == 0) { mm <- NULL } else
if( sum(mm) == nrow(mm) * ncol(mm) ) {mm <- NULL } else
{ mm <- mm }
mats[[i]] <- mm
}
mats
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
sapply(mats_traits_bal, sum)
sapply(mats_traits_unbal, sum)
mats_traits_unbal[[2]]
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
if(sum(mm) == 0) { mm <- NULL } else
if( sum(mm) == nrow(mm) * ncol(mm) ) {mm <- NULL } else
{ mm <- mm }
mats[[i]] <- mm
}
mats[!is.null(mats)]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
mats_traits_unbal[[2]]
sapply(mats_traits_unbal, is.null)
mats_traits_unbal[is.null(mats_traits_unbal)]
mats_traits_unbal[sapply(mats_traits_unbal, is.null)]
mats_traits_unbal[!sapply(mats_traits_unbal, is.null)]
sim_traits_nets <- function(listoftraitvecs, ratio) {
mats <- list()
for(i in 1:length(listoftraitvecs[[1]])) {
mm <- outer(listoftraitvecs[[1]][[i]], listoftraitvecs[[2]][[i]],
function(x,y) as.numeric(exp(x-y) < ratio))
dimnames(mm)[[1]] <- names(listoftraitvecs[[1]][[i]])
dimnames(mm)[[2]] <- names(listoftraitvecs[[2]][[i]])
if(sum(mm) == 0) { mm <- NULL } else
if( sum(mm) == nrow(mm) * ncol(mm) ) {mm <- NULL } else
{ mm <- mm }
mats[[i]] <- mm
}
mats[!sapply(mats, is.null)]
}
mats_traits_bal <- sim_traits_nets(all_t1_bal, ratio = 1.5)
mats_traits_unbal <- sim_traits_nets(all_t1_unbal, ratio = 1.5)
sapply(mats_traits_unbal, is.null)
sapply(mats_traits_unbal, sum)
sapply(mats_traits_bal, sum)
df_traits <- getnetmets(mats_traits_bal, mats_traits_unbal)
df_traits
mats_traits_bal[[20]]
sum(mats_traits_bal[[20]])
df_traits_melt <- melt(df_traits)
head(df_traits_melt)
ggplot(df_traits_melt, aes(type, value, fill=variable)) +
theme_bw(base_size=18) +
geom_boxplot() +
facet_wrap(~ variable, scales="free") +
opts(legend.position = 'none')
library(rplos)
library(ggplot2); library(rgbif); library(maps)
dan_chr <- occurrencelist(
sciname = 'Danaus chrysippus', coordinatestatus = TRUE, maxresults = 200,
latlongdf = TRUE, removeZeros = TRUE)
dan_chr
library(ggplot2); library(rgbif); library(maps)
detach("package:rgbif")
install_github("rgbif", "vijaybarve")
library(rgbif)
install_github("rentrez", "ropensci")
library(rentrez)
pubmed_search <- entrez_search(db="pubmed", term="Dwarf Elephant", retmax=1)
entrez_summary(db="pubmed", ids=pubmed_search$ids)
library(knitr)
knit2pdf("/Users/ScottMac/github/SChamberlain/posterstalks/rvantalk/R/ropensci_egs.Rmd")
knit2pdf("/Users/ScottMac/github/SChamberlain/posterstalks/rvantalk/R/ropensci_egs.Rmd")
knit2html("/Users/ScottMac/github/SChamberlain/posterstalks/rvantalk/R/ropensci_egs.Rmd")
library(rentrez)
entrez_link(dbfrom='pubmed', retmode='xml', id=19755503, cmd='neighbor')
entrez_link(db='pubmed', dbfrom='pubmed', retmode='xml', id=19755503, cmd='neighbor')
entrez_link(db='pubmed', dbfrom='pubmed', retmode='xml', id=19755503, cmd='neighbor')$file
out <- entrez_link(db='pubmed', dbfrom='pubmed', retmode='xml', id=19755503, cmd='neighbor')$file
out
xpathApply(out, "//Link")
xpathApply(out, "//Link", xmlValue)
xpathApply(out, "//Link", xmlValue)
sapply(xpathApply(out, "//Link", xmlValue), as.numeric)
do.call(xpathApply(out, "//Link", xmlValue), as.numeric)
do.call(as.numeric, xpathApply(out, "//Link", xmlValue))
sapply(xpathApply(out, "//Link", xmlValue), as.numeric)
out
xpathApply(out, "//LinkName")
xpathApply(out, "/LinkName")
getNodeSet(out, "/LinkName")
getNodeSet(out, "//LinkName")
getNodeSet(out, "//LinkName/Link")
xpathApply(out, "//LinkName/Link")
xpathApply(out, "//LinkName//Link")
xpathApply(out, "//LinkName:Link")
xpathApply(out, "//LinkName[Link]")
xpathApply(out, "//LinkName[pubmed_pubmed_citedin]")
xpathApply(out, "//LinkName:pubmed_pubmed_citedin")
xpathApply(out, "/LinkName:pubmed_pubmed_citedin")
xmlToList(out)
out
xpathApply(out, "LinkName/Link")
xpathApply(out, "@pubmed_pubmed_citedin")
xpathApply(out, "//LinkName[@pubmed_pubmed_citedin]")
getNodeSet(out, "//LinkName[@pubmed_pubmed_citedin]")
xpathApply(out, "/LinkName/pubmed_pubmed_citedin")
xpathApply(out, "//LinkName//pubmed_pubmed_citedin")
xpathApply(out, "//LinkName//Link")
sapply(xpathApply(out, "//Link", xmlValue), as.numeric)
knit2html("/Users/ScottMac/github/SChamberlain/posterstalks/rvantalk/R/ropensci_egs.Rmd")
knit2html("/Users/ScottMac/github/ropensci/docs/nceas/nceas_working_group_proposal.Rmd")
knit2html("/Users/ScottMac/github/ropensci/docs/nceas/nceas_working_group_proposal.Rmd")
knit2html("/Users/ScottMac/github/ropensci/docs/nceas/nceas_working_group_proposal.Rmd")
knit2html("/Users/ScottMac/github/ropensci/docs/nceas/nceas_working_group_proposal.Rmd")
